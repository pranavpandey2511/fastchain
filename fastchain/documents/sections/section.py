from base import Section
from docarray.typing import (
    NdArray,
    NdArrayEmbedding,
    AudioNdArray,
    VideoNdArray,
    AnyEmbedding,
    ImageUrl,
    AudioUrl,
    TextUrl,
    Mesh3DUrl,
    PointCloud3DUrl,
    VideoUrl,
    AnyUrl,
    ID,
    AnyTensor,
    ImageTensor,
    AudioTensor,
    VideoTensor,
    ImageNdArray,
    ImageBytes,
    VideoBytes,
    AudioBytes,
)
from pydantic import Field


class Text(Section):
    """Text section class."""

    content_type: str = "plaintext"
    content: str = Field(default_factory=str)

    def __str__(self):
        return self.content


class Image(Section):
    """Image section class."""

    content_type: str = "image"
    content: ImageBytes = Field(default_factory=ImageBytes)


class Video(Section):
    """Video section class."""

    content_type: str = "video"
    content: VideoBytes = Field(default_factory=VideoBytes)


class Audio(Section):
    """Audio section class."""

    content_type: str = "audio"
    content: AudioBytes = Field(default_factory=AudioBytes)


class FigureCaption(Text):
    """Figure caption existing or autogenerated (model)"""

    content_type: str = "caption"


class TranscribedAudio(Text):
    """Audio transcribed to text"""

    content_type: str = "audio"
